name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  db-init:
    name: Initialize Database
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        options: --env MYSQL_ROOT_PASSWORD=password --env MYSQL_DATABASE=fullstack24 --env MYSQL_USER=user --env MYSQL_PASSWORD=password
        ports:
          - 3306:3306


    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Wait for MySQL to be ready
        run: |
          until mysql -h 127.0.0.1 -u root -prootpassword -e "SELECT 1"; do
            echo "Waiting for MySQL to be ready..."
            sleep 2
          done

  doctorstaff-ms-build:
    name: Build and Test Doctorstaff Microservice
    runs-on: ubuntu-latest
    needs: db-init

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Doctorstaff Microservice
        working-directory: backend/doctorstaff-ms
        run: mvn clean install -DskipTests

      - name: Run Doctorstaff Microservice Tests
        working-directory: backend/doctorstaff-ms
        run: mvn test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: registry.cloud.cbh.kth.se
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Doctorstaff Microservice
        uses: docker/build-push-action@v5
        with:
          context: ./backend/doctorstaff-ms
          file: ./backend/doctorstaff-ms/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_TAG }}

  image-ms-build:
    name: Build and Test Image Microservice
    runs-on: ubuntu-latest
    needs: db-init

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

          # Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'  # Use the version of Node.js that your project requires

      - name: Ensure Jest has executable permissions
        working-directory: backend/image-ms
        run: chmod +x node_modules/.bin/jest

      - name: Install Dependencies for Image Microservice
        working-directory: backend/image-ms
        run: npm install

      - name: Run Image Microservice Tests
        working-directory: backend/image-ms
        run: npm test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: registry.cloud.cbh.kth.se
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Image Microservice
        uses: docker/build-push-action@v5
        with:
          context: ./backend/image-ms
          file: ./backend/image-ms/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_TAG }}

  messaging-ms-build:
    name: Build and Test Messaging Microservice
    runs-on: ubuntu-latest
    needs: db-init

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Messaging Microservice
        working-directory: backend/messaging-ms  # assuming it's located in backend/messaging-ms
        run: mvn clean install -DskipTests

      - name: Run Messaging Microservice Tests
        working-directory: backend/messaging-ms
        run: mvn test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: registry.cloud.cbh.kth.se
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Messaging Microservice
        uses: docker/build-push-action@v5
        with:
          context: ./backend/messaging-ms
          file: ./backend/messaging-ms/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_TAG }}

  patient-ms-build:
    name: Build and Test Patient Microservice
    runs-on: ubuntu-latest
    needs: db-init

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Patient Microservice
        working-directory: backend/patient-ms  # assuming it's located in backend/messaging-ms
        run: mvn clean install -DskipTests

      - name: Run Patient Microservice Tests
        working-directory: backend/patient-ms
        run: mvn test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: registry.cloud.cbh.kth.se
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Patient Microservice
        uses: docker/build-push-action@v5
        with:
          context: ./backend/patient-ms
          file: ./backend/patient-ms/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_TAG }}

  user-ms-build:
    name: Build and Test User Microservice
    runs-on: ubuntu-latest
    needs: db-init

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build User Microservice
        working-directory: backend/user-ms  # assuming it's located in backend/messaging-ms
        run: mvn clean install -DskipTests

      - name: Run User Microservice Tests
        working-directory: backend/user-ms
        run: mvn test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: registry.cloud.cbh.kth.se
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push User Microservice
        uses: docker/build-push-action@v5
        with:
          context: ./backend/user-ms
          file: ./backend/user-ms/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_TAG }}

  frontend-build:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: db-init

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: registry.cloud.cbh.kth.se
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_TAG }}
