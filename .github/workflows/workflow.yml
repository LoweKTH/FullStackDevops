name: CI with Docker Compose

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to the main branch

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          # The MySQL docker container requires these environment variables to be set
          # so we can create and migrate the test database.
          # See: https://hub.docker.com/_/mysql
          MYSQL_DATABASE: fullstack24
          MYSQL_ROOT_PASSWORD: password
        ports:
          # Opens port 3306 on service container and host
          # https://docs.github.com/en/actions/using-containerized-services/about-service-containers
          - 3306:3306
          # Before continuing, verify the mysql container is reachable from the ubuntu host
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify installation

      # Log in to DockerHub (if you're using private images or need DockerHub authentication)
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: registry.cloud.cbh.kth.se
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker Compose services
      - name: Build and start Docker Compose services
        run: |
          docker-compose -f ./backend/docker-compose.yaml up -d --build doctorstaff-ms

      # Wait for MySQL to be ready
      - name: Wait for MySQL to be ready
        run: |
          while ! docker exec $(docker-compose -f ./backend/docker-compose.yaml ps -q db) mysqladmin ping --silent; do
            echo "Waiting for MySQL to be ready..."
            sleep 5
          done
          echo "MySQL is ready!"

      # Run tests for messaging-ms (this is done during the build step)
      #- name: Run tests for messaging-ms
      #  run: |
      #    docker ps
      #    docker-compose -f ./backend/docker-compose.yaml run --rm messaging-ms mvn test


      # Run tests for doctorstaff-ms
     # - name: Run tests for doctorstaff-ms
      #  run: |
      #    docker-compose -f ./backend/docker-compose.yaml run --rm doctorstaff-ms mvn test

      # Run tests for patient-ms
      #- name: Run tests for patient-ms
      #  run: |
       #   docker-compose -f ./backend/docker-compose.yaml run --rm patient-ms mvn test

      # Run tests for user-ms
      #- name: Run tests for user-ms
      #  run: |
      #    docker-compose -f ./backend/docker-compose.yaml run --rm user-ms mvn test

      # Run tests for image-ms (using npm for testing)
     # - name: Run tests for image-ms
      #  run: |
      #    docker-compose -f ./backend/docker-compose.yaml run --rm image-ms npm test

      # Optionally, build and push Docker images to a registry (if needed)
      - name: Build and push Doctorstaff Microservice
        uses: docker/build-push-action@v5
        with:
          context: ./backend/doctorstaff-ms
          file: ./backend/doctorstaff-ms/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_TAG }}

      #- name: Build and push Image Microservice
      #  uses: docker/build-push-action@v5
      #  with:
       #   context: ./backend/image-ms
        #  file: ./backend/image-ms/Dockerfile
         # push: true
          #tags: ${{ secrets.DOCKER_TAG }}

 #     - name: Build and push Messaging Microservice
  #      uses: docker/build-push-action@v5
   #     with:
    #      context: ./backend/messaging-ms
     #     file: ./backend/messaging-ms/Dockerfile
      #    push: true
       #   tags: ${{ secrets.DOCKER_TAG }}

#      - name: Build and push Patient Microservice
 #       uses: docker/build-push-action@v5
  #      with:
   #       context: ./backend/patient-ms
    #      file: ./backend/patient-ms/Dockerfile
     #     push: true
      #    tags: ${{ secrets.DOCKER_TAG }}

#      - name: Build and push User Microservice
 #       uses: docker/build-push-action@v5
  #      with:
   #       context: ./backend/user-ms
    #      file: ./backend/user-ms/Dockerfile
     #     push: true
      #    tags: ${{ secrets.DOCKER_TAG }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_TAG }}

      # Shut down the containers after tests
      - name: Shutdown Docker Compose services
        run: |
          docker-compose -f ./backend/docker-compose.yaml down
